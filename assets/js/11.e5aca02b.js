(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{380:function(t,s,a){t.exports=a.p+"assets/img/image-20230114101950723.db4fd73a.png"},464:function(t,s,a){t.exports=a.p+"assets/img/image-20221217012643576.2e33d2b2.png"},465:function(t,s,a){t.exports=a.p+"assets/img/image-20230114090304163.794cd2df.png"},466:function(t,s,a){t.exports=a.p+"assets/img/18url.7fbc74a2.png"},467:function(t,s,a){t.exports=a.p+"assets/img/image-20230114114204597.52a4bd47.png"},516:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("总览")]),t._v(" "),s("p",[t._v("输入URL到页面显示全过程详解笔记")])]),t._v(" "),s("h2",{attrs:{id:"uri、-url-和-urn-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uri、-url-和-urn-的区别"}},[t._v("#")]),t._v(" URI、 URL 和 URN 的区别")]),t._v(" "),s("p",[t._v("URI  Universal Resource Identifier 统一资源标志符")]),t._v(" "),s("p",[t._v("URI采用一种特定语法标识一个资源的字符串。所标识的资源可能是服务器上的一个文件。不过，也可能是一个邮件地址、新闻消息、图书、人名、Internet主机或者任何其它内容。")]),t._v(" "),s("p",[s("strong",[t._v("URL")]),t._v("是一种具体的URI，它是URI的一个子集，它不仅唯一标识资源，而且还提供了定位该资源的信息")]),t._v(" "),s("p",[t._v("URI包含URL和URN")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("URL Universal Resource Locator 统一资源定位符  URL唯一地标识一个资源在Internet上的位置")])]),t._v(" "),s("li",[s("p",[t._v("URN  Universal Resource Name 统一资源名称  URN它命名资源但不指定如何定位资源，比如：只告诉你一个人的姓名，不告诉你这个人在哪。例如：telnet、mailto、news 和 isbn URI 等都是URN。")])]),t._v(" "),s("li",[s("p",[t._v("URL 一定是 URI ；URN + URL 就是 URI")])])]),t._v(" "),s("h2",{attrs:{id:"输入url到页面发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入url到页面发生了什么"}},[t._v("#")]),t._v(" 输入URL到页面发生了什么？")]),t._v(" "),s("p",[s("img",{attrs:{src:a(464),alt:"image-20221217012643576"}})]),t._v(" "),s("h2",{attrs:{id:"第一阶段-网络角度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一阶段-网络角度"}},[t._v("#")]),t._v(" 第一阶段-网络角度")]),t._v(" "),s("p",[t._v("在浏览器输入一个地址例： "),s("code",[t._v("https://www.baidu.com/")])]),t._v(" "),s("p",[s("strong",[t._v("1. 构建请求")])]),t._v(" "),s("p",[t._v("浏览器会构建请求行:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求方法是GET，路径为根路径，HTTP协议版本为1.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("2. 查找强缓存")])]),t._v(" "),s("p",[t._v("先检查强缓存，如果存在则直接使用，否则进入下一步。具体详细见**"),s("code",[t._v("浏览器缓存")]),t._v("**笔记")]),t._v(" "),s("p",[s("strong",[t._v("3.DNS解析")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(465),alt:"image-20230114090304163"}})]),t._v(" "),s("p",[t._v("首先查询浏览器自身的DNS缓存，如果查到IP地址就结束解析，由于缓存时间限制比较大，一般只有1分钟，同时缓存容量也有限制，所以在浏览器缓存中没找到IP地址时，就会搜索系统自身的DNS缓存;如果还未找到，接着就会尝试从系统的 hosts文件中查找。\n在本地主机进行的查询若都没获取到，接下来便会在本地域名服务器上查询。如果本地域名服务器没有直接的目标IP地址可供返回，则本地域名服务器便会采取迭代的方式去依次查询根域名服务器、COM顶级域名服务器和权限域名服务器等，最终将所要访问的目标服务器IP地址返回本地主机，若查询不到，则返回报错信息。")]),t._v(" "),s("p",[s("strong",[t._v("4. 建立 TCP 连接")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("三次握手")]),t._v("确认连接，")]),t._v(" "),s("li",[s("code",[t._v("数据包校验")]),t._v("保证数据到达接收方")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("四次挥手")]),t._v("断开连接。")])]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/笔记整理/浏览器与计网/TCP.html"}},[t._v("详见TCP笔记")])],1),t._v(" "),s("p",[s("strong",[t._v("5.发送 HTTP 请求")])]),t._v(" "),s("p",[t._v("现在"),s("code",[t._v("TCP连接")]),t._v("建立完毕，浏览器可以和服务器开始通信，即开始发送 HTTP 请求。浏览器发 HTTP 请求要携带三样东西:"),s("strong",[t._v("请求行")]),t._v("、"),s("strong",[t._v("请求头")]),t._v("和"),s("strong",[t._v("请求体")]),t._v("。")]),t._v(" "),s("p",[t._v("首先，浏览器会向服务器发送"),s("strong",[t._v("请求行")]),t._v(",关于"),s("strong",[t._v("请求行")]),t._v("， 我们在第一步就构建完了")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求方法是GET，路径为根路径，HTTP协议版本为1.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("结构很简单，由"),s("strong",[t._v("请求方法")]),t._v("、"),s("strong",[t._v("请求URI")]),t._v("和"),s("strong",[t._v("HTTP版本协议")]),t._v("组成。")]),t._v(" "),s("p",[t._v("同时也要带上"),s("strong",[t._v("请求头")]),t._v("，列举如下:")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Accept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application/xhtml+xml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application/xml;q=0.9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("image/webp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("image/apng"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*/*;q=0.8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application/signed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exchange;v=b3\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Accept-Encoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gzip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deflate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" br\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Accept-Language")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("CN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("zh;q=0.9\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Connection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alive\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /* 省略cookie信息 "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" www.baidu.com\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Pragma")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Upgrade-Insecure-Requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("User-Agent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" like Gecko) Version/11.0 Mobile/15A372 Safari/604.1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("最后是请求体，请求体只有在"),s("code",[t._v("POST")]),t._v("方法下存在，常见的场景是"),s("strong",[t._v("表单提交")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("网络响应")])]),t._v(" "),s("p",[t._v("HTTP 请求到达服务器，服务器进行对应的处理。最后要把数据传给浏览器，也就是返回网络响应。")]),t._v(" "),s("p",[t._v("跟请求部分类似，网络响应具有三个部分:"),s("strong",[t._v("响应行")]),t._v("、"),s("strong",[t._v("响应头")]),t._v("和"),s("strong",[t._v("响应体")]),t._v("。")]),t._v(" "),s("p",[t._v("响应行类似下面这样:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("由"),s("code",[t._v("HTTP协议版本")]),t._v("、"),s("code",[t._v("状态码")]),t._v("和"),s("code",[t._v("状态描述")]),t._v("组成。")]),t._v(" "),s("p",[t._v("响应头包含了服务器及其返回数据的一些信息, 服务器生成数据的时间、返回的数据类型以及对即将写入的Cookie信息。")]),t._v(" "),s("p",[t._v("举例如下:")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Connection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alive\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Content-Encoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gzip\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Content-Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/html;charset=utf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Wed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 04 Dec 2019 12"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("29"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("13 GMT\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Set-Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rsv_i=f9a0SIItKqzv7kqgAAgphbGyRts3RwTg%2FLyU3Y5Eh5LwyfOOrAsvdezbay0QqkDqFZ0DfQXby4wXKT8Au8O7ZT9UuMsBq2k; path=/; domain=.baidu.com\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("响应完成之后怎么办？")]),t._v(" "),s("p",[t._v("这时候要判断"),s("code",[t._v("Connection")]),t._v("字段, 如果请求头或响应头中包含"),s("strong",[t._v("Connection: Keep-Alive")]),t._v("，表示建立了持久连接，这样"),s("code",[t._v("TCP")]),t._v("连接会一直保持，之后请求统一站点的资源会复用这个连接。")]),t._v(" "),s("p",[t._v("否则断开"),s("code",[t._v("TCP")]),t._v("连接, 请求-响应流程结束。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(466),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"第二阶段-解析算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二阶段-解析算法"}},[t._v("#")]),t._v(" 第二阶段-解析算法")]),t._v(" "),s("p",[t._v("如果响应头中"),s("code",[t._v("Content-Type")]),t._v("的值是"),s("code",[t._v("text/html")]),t._v("，那么接下来就是浏览器的解析和渲染工作了。")]),t._v(" "),s("p",[t._v("解析部分，主要分为以下几个步骤:")]),t._v(" "),s("p",[s("img",{attrs:{src:a(380),alt:"image-20230114101950723"}})]),t._v(" "),s("p",[t._v("Token（符号标签），例如："),s("code",[t._v("<html>")]),t._v("、"),s("code",[t._v("<body>")]),t._v("等。"),s("strong",[t._v("Token中会标识出当前Token是“开始标签”或是“结束标签”亦或是“文本”等信息")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("1.构建 DOM树")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("标记化")])])]),t._v(" "),s("p",[t._v("输入为"),s("code",[t._v("HTML文本")]),t._v("，输出为"),s("code",[t._v("HTML标记")]),t._v("，也成为"),s("strong",[t._v("标记生成器")])]),t._v(" "),s("p",[t._v("遇到"),s("code",[t._v("<")]),t._v(", 状态为"),s("strong",[t._v("标记打开")]),t._v("。")]),t._v(" "),s("p",[t._v("接收"),s("code",[t._v("[a-z]")]),t._v("的字符，会进入"),s("strong",[t._v("标记名称状态")]),t._v("。")]),t._v(" "),s("p",[t._v("这个状态一直保持，直到遇到"),s("code",[t._v(">")]),t._v("，表示标记名称记录完成")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("建树")])])]),t._v(" "),s("p",[t._v("接收到标记生成器传来的"),s("code",[t._v("html")]),t._v("标签，这时候状态变为"),s("strong",[t._v("before html状态")]),t._v("。同时创建一个"),s("code",[t._v("HTMLHtmlElement")]),t._v("的 DOM 元素, 将其加到"),s("code",[t._v("document")]),t._v("根对象上，并进行压栈操作。")]),t._v(" "),s("p",[t._v("接着状态自动变为"),s("strong",[t._v("before head")]),t._v(", 此时从标记生成器那边传来"),s("code",[t._v("body")]),t._v("，表示并没有"),s("code",[t._v("head")]),t._v(", 这时候"),s("strong",[t._v("建树器")]),t._v("会自动创建一个"),s("strong",[t._v("HTMLHeadElement")]),t._v("并将其加入到"),s("code",[t._v("DOM树")]),t._v("中。")]),t._v(" "),s("p",[t._v("现在进入到"),s("strong",[t._v("in head")]),t._v("状态, 然后直接跳到"),s("strong",[t._v("after head")]),t._v("。")]),t._v(" "),s("p",[t._v("现在"),s("strong",[t._v("标记生成器")]),t._v("传来了"),s("code",[t._v("body")]),t._v("标记，创建"),s("strong",[t._v("HTMLBodyElement")]),t._v(", 插入到"),s("code",[t._v("DOM")]),t._v("树中，同时压入开放标记栈。")]),t._v(" "),s("p",[t._v("接着状态变为"),s("strong",[t._v("in body")]),t._v("，然后来接收后面一系列的字符: "),s("strong",[t._v("Hello sanyuan")]),t._v("。接收到第一个字符的时候，会创建一个"),s("strong",[t._v("Text")]),t._v("节点并把字符插入其中，然后把"),s("strong",[t._v("Text")]),t._v("节点插入到 DOM 树中"),s("code",[t._v("body元素")]),t._v("的下面。随着不断接收后面的字符，这些字符会附在"),s("strong",[t._v("Text")]),t._v("节点上。")]),t._v(" "),s("p",[t._v("现在，"),s("strong",[t._v("标记生成器")]),t._v("传过来一个"),s("code",[t._v("body")]),t._v("的结束标记，进入到"),s("strong",[t._v("after body")]),t._v("状态。")]),t._v(" "),s("p",[s("strong",[t._v("标记生成器")]),t._v("最后传过来一个"),s("code",[t._v("html")]),t._v("的结束标记, 进入到"),s("strong",[t._v("after after body")]),t._v("的状态，表示解析过程到此结束。")]),t._v(" "),s("p",[s("strong",[t._v("2.样式计算")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("格式化样式表")])])]),t._v(" "),s("p",[t._v("浏览器是无法直接识别 CSS 样式文本的，因此渲染引擎接收到 CSS 文本之后第一件事情就是将其转化为一个结构化的对象，即styleSheets。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("标准化样式属性")])])]),t._v(" "),s("p",[t._v("有一些 CSS 样式的数值并不容易被渲染引擎所理解，因此需要在计算样式之前将它们标准化，如"),s("code",[t._v("em")]),t._v("->"),s("code",[t._v("px")]),t._v(","),s("code",[t._v("red")]),t._v("->"),s("code",[t._v("#ff0000")]),t._v(","),s("code",[t._v("bold")]),t._v("->"),s("code",[t._v("700")]),t._v("等等。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(380),alt:"image-20230114101950723"}})]),t._v(" "),s("p",[t._v("这里的DOM是CSSOM")]),t._v(" "),s("p",[s("strong",[t._v("3.生成布局树(Layout Tree)")])]),t._v(" "),s("p",[t._v("当我们生成 DOM 树和 CSSOM 树以后，就需要将这两棵树组合为渲染树。")]),t._v(" "),s("p",[t._v("当浏览器生成渲染树以后，就会根据渲染树来进行布局（也可以叫做回流）")]),t._v(" "),s("p",[t._v("渲染树，其实这还是 16 年之前的事情，现在 Chrome 团队已经做了大量的重构，"),s("strong",[t._v("已经没有生成"),s("code",[t._v("Render Tree")]),t._v("的过程了")]),t._v("。而布局树的信息已经非常完善，完全拥有"),s("code",[t._v("Render Tree")]),t._v("的功能。")]),t._v(" "),s("p",[t._v("布局树生成的大致工作如下:")]),t._v(" "),s("ol",[s("li",[t._v("遍历生成的 DOM 树节点，并把他们添加到"),s("code",[t._v("布局树中")]),t._v("。")]),t._v(" "),s("li",[t._v("计算布局树节点的坐标位置。")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(467),alt:"image-20230114114204597"}})]),t._v(" "),s("h2",{attrs:{id:"第三阶段-渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三阶段-渲染过程"}},[t._v("#")]),t._v(" 第三阶段-渲染过程")]),t._v(" "),s("p",[t._v("分为以下几个步骤:")]),t._v(" "),s("ul",[s("li",[t._v("建立"),s("code",[t._v("图层树")]),t._v("("),s("code",[t._v("Layer Tree")]),t._v(")")]),t._v(" "),s("li",[t._v("生成"),s("code",[t._v("绘制列表")])]),t._v(" "),s("li",[t._v("生成"),s("code",[t._v("图块")]),t._v("并"),s("code",[t._v("栅格化")])]),t._v(" "),s("li",[t._v("显示器显示内容")])]),t._v(" "),s("p",[t._v("详见浏览器渲染过程")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/53913989",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出浏览器渲染原理 - 知乎 (zhihu.com)"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844904021308735502#heading-46",target:"_blank",rel:"noopener noreferrer"}},[t._v("(1.6w字)浏览器灵魂之问，请问你能接得住几个？ - 掘金 (juejin.cn)"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);