(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{473:function(v,t,_){v.exports=_.p+"assets/img/image-20230328100015486.de933447.png"},474:function(v,t,_){v.exports=_.p+"assets/img/image-20230328100101005.73a77d52.png"},475:function(v,t,_){v.exports=_.p+"assets/img/image-20230328100230187.80005f50.png"},476:function(v,t,_){v.exports=_.p+"assets/img/image-20230324143409392.2ddcb6ac.png"},477:function(v,t,_){v.exports=_.p+"assets/img/image-20230324145606381.c454cef3.png"},478:function(v,t,_){v.exports=_.p+"assets/img/image-20230324143928696.3c9da3fc.png"},479:function(v,t,_){v.exports=_.p+"assets/img/image-20230324144240088.368b9297.png"},480:function(v,t,_){v.exports=_.p+"assets/img/image-20230328100806934.ac58d402.png"},481:function(v,t,_){v.exports=_.p+"assets/img/image-20230328101848823.de2734a8.png"},482:function(v,t,_){v.exports=_.p+"assets/img/image-20230328102534165.e2cdee51.png"},483:function(v,t,_){v.exports=_.p+"assets/img/image-20230324145801353.ec5ced34.png"},484:function(v,t,_){v.exports=_.p+"assets/img/image-20230324145816151.41f1f21a.png"},485:function(v,t,_){v.exports=_.p+"assets/img/image-20230328103148012.b8e6d673.png"},486:function(v,t,_){v.exports=_.p+"assets/img/23.937e4dac.png"},487:function(v,t,_){v.exports=_.p+"assets/img/image-20230328180017703.dfff9aa0.png"},488:function(v,t,_){v.exports=_.p+"assets/img/image-20230328180150688.59668f37.png"},489:function(v,t,_){v.exports=_.p+"assets/img/image-20230328180056974.9f3c387b.png"},490:function(v,t,_){v.exports=_.p+"assets/img/image-20230328163152850.50bf6ab8.png"},629:function(v,t,_){"use strict";_.r(t);var a=_(2),s=Object(a.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("总览")]),v._v(" "),t("p",[v._v("HTTPS和HTTP、对称加密和非对称加密、中间人攻击、摘要算法和数字签名算法、数字证书、SSL/TLS与HTTPS链接的建立")])]),v._v(" "),t("h2",{attrs:{id:"http和https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http和https"}},[v._v("#")]),v._v(" HTTP和HTTPS")]),v._v(" "),t("p",[v._v("HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，从而就诞生了HTTPS。简单来说，HTTPS 就是在 HTTP 与 TCP 层之间增加了 SSL/TLS 安全传输层，HTTP的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比HTTP协议安全。")]),v._v(" "),t("p",[v._v("HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL/TLS 的握手过程，才可进入加密报文传输。")]),v._v(" "),t("h2",{attrs:{id:"https特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https特征"}},[v._v("#")]),v._v(" HTTPS特征")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("信息加密")]),v._v("：交互信息无法被窃取")]),v._v(" "),t("p",[t("strong",[v._v("混合加密")]),v._v("的方式实现信息的"),t("strong",[v._v("机密性")]),v._v("，解决了窃听的风险。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("校验机制")]),v._v("：无法篡改通信内容，篡改了就不能正常显示")]),v._v(" "),t("p",[t("strong",[v._v("摘要算法")]),v._v("的方式来实现"),t("strong",[v._v("完整性")]),v._v("，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("身份证书")]),v._v("：CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的")]),v._v(" "),t("p",[v._v("将服务器公钥放入到"),t("strong",[v._v("数字证书")]),v._v("中，解决了冒充的风险。")])])]),v._v(" "),t("p",[v._v("它采用的就是上面说的 “混合加密” + “数字证书” 两种技术，来保证整个通信过程的安全可靠。")]),v._v(" "),t("h2",{attrs:{id:"窃听伪造与否认"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#窃听伪造与否认"}},[v._v("#")]),v._v(" 窃听伪造与否认")]),v._v(" "),t("p",[t("strong",[v._v("窃听")])]),v._v(" "),t("img",{staticStyle:{zoom:"115%"},attrs:{src:_(473),alt:"image-20230328100015486"}}),v._v(" "),t("p",[t("strong",[v._v("伪造")])]),v._v(" "),t("p",[t("img",{attrs:{src:_(474),alt:"image-20230328100101005"}})]),v._v(" "),t("p",[t("strong",[v._v("否认")])]),v._v(" "),t("img",{staticStyle:{zoom:"125%"},attrs:{src:_(475),alt:"image-20230328100230187"}}),v._v(" "),t("h2",{attrs:{id:"对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[v._v("#")]),v._v(" 对称加密")]),v._v(" "),t("img",{staticStyle:{zoom:"105%"},attrs:{src:_(476),alt:"image-20230324143409392"}}),v._v(" "),t("p",[t("strong",[v._v("“对称密钥加密” 一个很重要的特点就是使用相同的密钥进行加密和解密")])]),v._v(" "),t("p",[v._v("上面这个场景就会引出一个新问题，这个问题被称为 “钥匙交付问题”，A需要通过互联网将钥匙发送给 B但是 "),t("code",[v._v("X")]),v._v(" 也有可能看到这个钥匙，为了解决问题，引入一个新的方法"),t("strong",[v._v("公开密钥加密")])]),v._v(" "),t("h2",{attrs:{id:"非对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[v._v("#")]),v._v(" 非对称加密")]),v._v(" "),t("p",[v._v("也称为"),t("strong",[v._v("公开密钥加密")])]),v._v(" "),t("p",[v._v("用于加密的密钥被称为“公钥”，用于解密的密钥被称为“私钥”")]),v._v(" "),t("img",{staticStyle:{zoom:"93%"},attrs:{src:_(477),alt:"image-20230324145606381"}}),v._v(" "),t("img",{staticStyle:{zoom:"103%"},attrs:{src:_(478),alt:"image-20230324143928696"}}),v._v(" "),t("ol",[t("li",[v._v("接收方 B 创建一个公钥和一个私钥，公钥被发送给 A")]),v._v(" "),t("li",[v._v("A 使用从 B收到的公钥加密数据，将密文发送给 B")]),v._v(" "),t("li",[v._v("B使用私钥解密从 A接收到的密文，得到原始数据")])]),v._v(" "),t("h2",{attrs:{id:"混合加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#混合加密"}},[v._v("#")]),v._v(" 混合加密")]),v._v(" "),t("p",[v._v("加密和解密都需要耗费时间，“混合加密” 的方法可以解决这个问题")]),v._v(" "),t("p",[v._v("通过"),t("strong",[v._v("混合加密")]),v._v("的方式可以保证信息的"),t("strong",[v._v("机密性")]),v._v("，解决了窃听的风险。")]),v._v(" "),t("p",[t("img",{attrs:{src:_(479),alt:"image-20230324144240088"}})]),v._v(" "),t("p",[v._v("HTTPS 采用的是"),t("strong",[v._v("对称加密")]),v._v("和"),t("strong",[v._v("非对称加密")]),v._v("结合的「混合加密」方式：")]),v._v(" "),t("ul",[t("li",[v._v("在通信建立前采用"),t("strong",[v._v("非对称加密")]),v._v("的方式交换「会话秘钥」，后续就不再使用非对称加密。")]),v._v(" "),t("li",[v._v("在通信过程中全部使用"),t("strong",[v._v("对称加密")]),v._v("的「会话秘钥」的方式加密明文数据。")])]),v._v(" "),t("img",{staticStyle:{zoom:"150%"},attrs:{src:_(480),alt:"image-20230328100806934"}}),v._v(" "),t("p",[v._v("采用「混合加密」的方式的原因：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("对称加密")]),v._v("只使用一个密钥，运算速度快，密钥必须保密，无法做到安全的密钥交换。")]),v._v(" "),t("li",[t("strong",[v._v("非对称加密")]),v._v("使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，解决了密钥交换问题但速度慢。")])]),v._v(" "),t("h2",{attrs:{id:"摘要算法与数字签名算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法与数字签名算法"}},[v._v("#")]),v._v(" 摘要算法与数字签名算法")]),v._v(" "),t("p",[v._v("在计算机里会用摘要算法**（哈希函数）来计算出内容的哈希值**，这个"),t("strong",[v._v("哈希值是唯一的，且无法通过哈希值推导出内容")])]),v._v(" "),t("p",[v._v("通过哈希算法可以确保内容不会被篡改，"),t("strong",[v._v("但是并不能保证「内容 + 哈希值」不会被中间人替换，因为这里缺少对客户端收到的消息是否来源于服务端的证明")]),v._v("。")]),v._v(" "),t("img",{staticStyle:{zoom:"110%"},attrs:{src:_(481),alt:"image-20230328101848823"}}),v._v(" "),t("p",[v._v("那为了避免这种情况，计算机里会用"),t("strong",[v._v("非对称加密算法")]),v._v("来解决，共有两个密钥：")]),v._v(" "),t("ul",[t("li",[v._v("一个是公钥，这个是可以公开给所有人的；")]),v._v(" "),t("li",[v._v("一个是私钥，这个必须由本人管理，不可泄露。")])]),v._v(" "),t("p",[v._v("这两个密钥可以"),t("strong",[v._v("双向加解密")]),v._v("的，比如可以用公钥加密内容，然后用私钥解密，也可以用私钥加密内容，公钥解密内容。")]),v._v(" "),t("p",[v._v("流程的不同，意味着目的也不相同：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("公钥加密，私钥解密")]),v._v("。这个目的是为了"),t("strong",[v._v("保证内容传输的安全")]),v._v("，因为被公钥加密的内容，其他人是无法解密的，只有持有私钥的人，才能解密出实际的内容；")]),v._v(" "),t("li",[t("strong",[v._v("私钥加密，公钥解密")]),v._v("。这个目的是为了"),t("strong",[v._v("保证消息不会被冒充")]),v._v("，因为私钥是不可泄露的，如果公钥能正常解密出私钥加密的内容，就能证明这个消息是来源于持有私钥身份的人发送的。")])]),v._v(" "),t("p",[v._v("一般我们不会用非对称加密来加密实际的传输内容，因为非对称加密的计算比较耗费性能的。")]),v._v(" "),t("p",[v._v("所以非对称加密的用途主要在于"),t("strong",[v._v("通过「私钥加密，公钥解密」的方式，来确认消息的身份")]),v._v("，我们常说的"),t("strong",[v._v("数字签名算法")]),v._v("，就是用的是这种方式，不过私钥加密内容不是内容本身，而是"),t("strong",[v._v("对内容的哈希值加密")]),v._v("。")]),v._v(" "),t("img",{staticStyle:{zoom:"150%"},attrs:{src:_(482),alt:"image-20230328102534165"}}),v._v(" "),t("p",[v._v("私钥是由服务端保管，然后服务端会向客户端颁发对应的公钥。如果客户端收到的信息，能被公钥解密，就说明该消息是由服务器发送的。")]),v._v(" "),t("h2",{attrs:{id:"中间人攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[v._v("#")]),v._v(" 中间人攻击")]),v._v(" "),t("p",[t("img",{attrs:{src:_(483),alt:"image-20230324145801353"}})]),v._v(" "),t("p",[t("img",{attrs:{src:_(484),alt:"image-20230324145816151"}})]),v._v(" "),t("p",[t("code",[v._v("A")]),v._v(" 拿到的其实是 "),t("code",[v._v("X")]),v._v(" 发送给他的伪造公钥，但是 "),t("code",[v._v("A")]),v._v(" 无法察觉")]),v._v(" "),t("p",[v._v("最后，"),t("code",[v._v("X")]),v._v(" 用他自己的密钥加密响应数据，并发送给 "),t("code",[v._v("A")]),v._v("，就这样，虽然 "),t("code",[v._v("A")]),v._v("、"),t("code",[v._v("B")]),v._v(" 双方能顺利完成通信，但是恶意的第三方 "),t("code",[v._v("X")]),v._v(" 能看到解密后的请求数据和响应数据，而 "),t("code",[v._v("A")]),v._v("、"),t("code",[v._v("B")]),v._v(" 双方则毫不知情。")]),v._v(" "),t("p",[v._v("这种通过秘密替换公钥窃取数据的方法被称为“中间人攻击”，问题的根源在于 "),t("code",[v._v("A")]),v._v(" 无法确认他们收到的公钥是否由 "),t("code",[v._v("B")]),v._v(" 方创建")]),v._v(" "),t("h2",{attrs:{id:"数字证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[v._v("#")]),v._v(" 数字证书")]),v._v(" "),t("ul",[t("li",[v._v("可以通过哈希算法来保证消息的完整性；")]),v._v(" "),t("li",[v._v("可以通过数字签名来保证消息的来源可靠性（能确认消息是由持有私钥的一方发送的）；")])]),v._v(" "),t("p",[v._v("但是这还远远不够，"),t("strong",[v._v("还缺少身份验证的环节")]),v._v("，万一公钥是被伪造的呢？如之前的"),t("strong",[v._v("中间人攻击")])]),v._v(" "),t("p",[v._v("于是出现了权威的机构就是 CA （"),t("strong",[v._v("数字证书认证机构")]),v._v("），将服务器公钥放在数字证书（由数字证书认证机构颁发）中，只要证书是可信的，公钥就是可信的，通过数字证书的方式保证服务器公钥的身份，解决冒充的风险。")]),v._v(" "),t("p",[t("img",{attrs:{src:_(485),alt:"image-20230328103148012"}})]),v._v(" "),t("p",[v._v("事实上，认证机构形成一个树形结构，高级别的权威机构为较低级别的机构创建证书，那就是说，如果要验证的话，就是一级一级向上认证，信任链条的最终是Root CA，他采用自签名，对他的签名是无条件的信任。")]),v._v(" "),t("h2",{attrs:{id:"ssl-tls与https链接的建立"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssl-tls与https链接的建立"}},[v._v("#")]),v._v(" SSL/TLS与HTTPS链接的建立")]),v._v(" "),t("p",[v._v("HTTPS 做的事情其实就是在传输层跟应用层之间加了一层 "),t("code",[v._v("SSL/TLS")]),v._v("，用于对 TCP 传输内容的加密和解密")]),v._v(" "),t("p",[v._v("SSL 是 “"),t("em",[v._v("Secure Sockets Layer")]),v._v("” 的缩写，中文叫做「安全套接层」。它是在上世纪 90 年代中期，由网景公司设计的。")]),v._v(" "),t("p",[v._v("到了1999年，SSL 因为应用广泛，已经成为互联网上的事实标准。IETF 就在那年把 SSL 标准化。标准化之后的名称改为 TLS（是 “"),t("em",[v._v("Transport Layer Security")]),v._v("” 的缩写），中文叫做 「传输层安全协议」。一般把这两者并列称呼（SSL/TLS），因为这两者可以视作同一个东西的不同阶段。")]),v._v(" "),t("p",[v._v("SSL/TLS 协议基本流程：")]),v._v(" "),t("ul",[t("li",[v._v("客户端向服务器索要并验证服务器的公钥。")]),v._v(" "),t("li",[v._v("双方协商生产「会话秘钥」。")]),v._v(" "),t("li",[v._v("双方采用「会话秘钥」进行加密通信。")])]),v._v(" "),t("p",[v._v("前两步也就是 SSL/TLS 的建立过程，涉及"),t("strong",[v._v("四次")]),v._v("通信，使用不同的密钥交换算法，TLS 握手流程也会不一样的，现在常用的密钥交换算法有两种：RSA 算法和 ECDHE 算法")]),v._v(" "),t("h2",{attrs:{id:"tls-协议建立的详细流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tls-协议建立的详细流程"}},[v._v("#")]),v._v(" TLS 协议建立的详细流程")]),v._v(" "),t("img",{attrs:{src:_(486)}}),v._v(" "),t("p",[t("strong",[v._v("1.ClientHello")])]),v._v(" "),t("p",[v._v("首先，由客户端向服务器发起加密通信请求，也就是 "),t("code",[v._v("ClientHello")]),v._v(" 请求。")]),v._v(" "),t("p",[v._v("在这一步，客户端主要向服务器发送以下信息：")]),v._v(" "),t("p",[v._v("（1）客户端支持的 TLS 协议版本，如 TLS 1.2 版本。")]),v._v(" "),t("p",[v._v("（2）客户端生产的随机数（"),t("code",[v._v("Client Random")]),v._v("），后面用于生成「会话秘钥」条件之一。")]),v._v(" "),t("p",[v._v("（3）客户端支持的密码套件列表，如 RSA 加密算法。")]),v._v(" "),t("p",[t("strong",[v._v("2.SeverHello")])]),v._v(" "),t("p",[v._v("服务器收到客户端请求后，向客户端发出响应，也就是 "),t("code",[v._v("SeverHello")]),v._v("。服务器回应的内容有如下内容：")]),v._v(" "),t("p",[v._v("（1）确认 TLS 协议版本，如果浏览器不支持，则关闭加密通信。")]),v._v(" "),t("p",[v._v("（2）服务器生产的随机数（"),t("code",[v._v("Server Random")]),v._v("），也是后面用于生产「会话秘钥」条件之一。")]),v._v(" "),t("p",[v._v("（3）确认的密码套件列表，如 RSA 加密算法。")]),v._v(" "),t("p",[v._v("（4）服务器的数字证书。")]),v._v(" "),t("p",[t("strong",[v._v("3.客户端回应")])]),v._v(" "),t("p",[v._v("客户端收到服务器的回应之后，首先通过浏览器或者操作系统中的 CA 公钥，确认服务器的数字证书的真实性。")]),v._v(" "),t("p",[v._v("如果证书没有问题，客户端会"),t("strong",[v._v("从数字证书中取出服务器的公钥")]),v._v("，然后使用它加密报文，向服务器发送如下信息：")]),v._v(" "),t("p",[v._v("（1）一个随机数（"),t("code",[v._v("pre-master key")]),v._v("）。该随机数会被服务器公钥加密。")]),v._v(" "),t("p",[v._v("（2）加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。")]),v._v(" "),t("p",[v._v("（3）客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供服务端校验。")]),v._v(" "),t("p",[v._v("上面第一项的随机数是整个握手阶段的第三个随机数，会发给服务端，所以这个随机数客户端和服务端都是一样的。")]),v._v(" "),t("p",[t("strong",[v._v("服务器和客户端有了这三个随机数（Client Random、Server Random、pre-master key），接着就用双方协商的加密算法，各自生成本次通信的「会话秘钥」")]),v._v("。")]),v._v(" "),t("p",[t("strong",[v._v("4. 服务器的最后回应")])]),v._v(" "),t("p",[v._v("服务器收到客户端的第三个随机数（"),t("code",[v._v("pre-master key")]),v._v("）之后，通过协商的加密算法，计算出本次通信的「会话秘钥」。")]),v._v(" "),t("p",[v._v("然后，向客户端发送最后的信息：")]),v._v(" "),t("p",[v._v("（1）加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。")]),v._v(" "),t("p",[v._v("（2）服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供客户端校验。")]),v._v(" "),t("p",[v._v("至此，整个 TLS 的握手阶段全部结束。接下来，客户端与服务器进入加密通信，就完全是使用普通的 HTTP 协议，只不过用「会话秘钥」加密内容。")]),v._v(" "),t("h2",{attrs:{id:"客户端校验数字证书的流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端校验数字证书的流程"}},[v._v("#")]),v._v(" 客户端校验数字证书的流程")]),v._v(" "),t("p",[t("img",{attrs:{src:_(487),alt:"image-20230328180017703"}})]),v._v(" "),t("p",[v._v("CA 签发证书的过程，如上图左边部分：")]),v._v(" "),t("ul",[t("li",[v._v("首先 CA 会把持有者的公钥、用途、颁发者、有效时间等信息打成一个包，然后对这些信息进行 Hash 计算，得到一个 Hash 值；")]),v._v(" "),t("li",[v._v("然后 CA 会使用自己的私钥将该 Hash 值加密，生成 Certificate Signature，也就是 CA 对证书做了签名；")]),v._v(" "),t("li",[v._v("最后将 Certificate Signature 添加在文件证书上，形成数字证书；")])]),v._v(" "),t("p",[v._v("客户端校验服务端的数字证书的过程，如上图右边部分：")]),v._v(" "),t("ul",[t("li",[v._v("首先客户端会使用同样的 Hash 算法获取该证书的 Hash 值 H1；")]),v._v(" "),t("li",[v._v("通常浏览器和操作系统中集成了 CA 的公钥信息，浏览器收到证书后可以使用 CA 的公钥解密 Certificate Signature 内容，得到一个 Hash 值 H2 ；")]),v._v(" "),t("li",[v._v("最后比较 H1 和 H2，如果值相同，则为可信赖的证书，否则则认为证书不可信。")])]),v._v(" "),t("p",[t("img",{attrs:{src:_(488),alt:"image-20230328180150688"}})]),v._v(" "),t("p",[v._v("对于这种三级层级关系的证书的验证过程如下：")]),v._v(" "),t("ul",[t("li",[v._v("客户端收到 baidu.com 的证书后，发现这个证书的签发者不是根证书，就无法根据本地已有的根证书中的公钥去验证 baidu.com 证书是否可信。于是，客户端根据 baidu.com 证书中的签发者，找到该证书的颁发机构是 “GlobalSign Organization Validation CA - SHA256 - G2”，然后向 CA 请求该中间证书。")]),v._v(" "),t("li",[v._v("请求到证书后发现 “GlobalSign Organization Validation CA - SHA256 - G2” 证书是由 “GlobalSign Root CA” 签发的，由于 “GlobalSign Root CA” 没有再上级签发机构，说明它是根证书，也就是自签证书。应用软件会检查此证书有否已预载于根证书清单上，如果有，则可以利用根证书中的公钥去验证 “GlobalSign Organization Validation CA - SHA256 - G2” 证书，如果发现验证通过，就认为该中间证书是可信的。")]),v._v(" "),t("li",[v._v("“GlobalSign Organization Validation CA - SHA256 - G2” 证书被信任后，可以使用 “GlobalSign Organization Validation CA - SHA256 - G2” 证书中的公钥去验证 baidu.com 证书的可信性，如果验证通过，就可以信任 baidu.com 证书。")])]),v._v(" "),t("p",[v._v("在这四个步骤中，最开始客户端只信任根证书 GlobalSign Root CA 证书的，然后 “GlobalSign Root CA” 证书信任 “GlobalSign Organization Validation CA - SHA256 - G2” 证书，而 “GlobalSign Organization Validation CA - SHA256 - G2” 证书又信任 baidu.com 证书，于是客户端也信任 baidu.com 证书。")]),v._v(" "),t("p",[v._v("总括来说，由于用户信任 GlobalSign，所以由 GlobalSign 所担保的 baidu.com 可以被信任，另外由于用户信任操作系统或浏览器的软件商，所以由软件商预载了根证书的 GlobalSign 都可被信任。")]),v._v(" "),t("p",[v._v("但事实上，证书的验证过程中"),t("strong",[v._v("还存在一个证书信任链的问题")]),v._v("，因为我们向 CA 申请的证书一般不是根证书签发的，而是由中间证书签发的")]),v._v(" "),t("p",[t("img",{attrs:{src:_(489),alt:"image-20230328180056974"}})]),v._v(" "),t("h2",{attrs:{id:"简单总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单总结"}},[v._v("#")]),v._v(" 简单总结")]),v._v(" "),t("p",[t("img",{attrs:{src:_(490),alt:"image-20230328163152850"}})]),v._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),t("p",[t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("HTTP 协议入门 - 阮一峰的网络日志 (ruanyifeng.com)"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("strong",[v._v("图解HTTP")])]),v._v(" "),t("p",[t("strong",[v._v("小林coding")])]),v._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/43789231",target:"_blank",rel:"noopener noreferrer"}},[v._v("彻底搞懂HTTPS的加密原理 - 知乎 (zhihu.com)"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6844903764399243278#heading-8",target:"_blank",rel:"noopener noreferrer"}},[v._v("完全图解 HTTPS - 掘金 (juejin.cn)"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);