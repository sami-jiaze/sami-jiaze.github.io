(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{472:function(t,_,v){t.exports=v.p+"assets/img/image-20230328100015486.de933447.png"},473:function(t,_,v){t.exports=v.p+"assets/img/image-20230328100230187.80005f50.png"},474:function(t,_,v){t.exports=v.p+"assets/img/image-20230324143409392.2ddcb6ac.png"},475:function(t,_,v){t.exports=v.p+"assets/img/image-20230324145606381.c454cef3.png"},476:function(t,_,v){t.exports=v.p+"assets/img/image-20230324143928696.3c9da3fc.png"},477:function(t,_,v){t.exports=v.p+"assets/img/image-20230324144240088.368b9297.png"},478:function(t,_,v){t.exports=v.p+"assets/img/image-20230328100806934.ac58d402.png"},479:function(t,_,v){t.exports=v.p+"assets/img/image-20230328101848823.de2734a8.png"},480:function(t,_,v){t.exports=v.p+"assets/img/image-20230328102534165.e2cdee51.png"},481:function(t,_,v){t.exports=v.p+"assets/img/image-20230324145801353.ec5ced34.png"},482:function(t,_,v){t.exports=v.p+"assets/img/image-20230324145816151.41f1f21a.png"},483:function(t,_,v){t.exports=v.p+"assets/img/image-20230328103148012.b8e6d673.png"},613:function(t,_,v){"use strict";v.r(_);var s=v(2),a=Object(s.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("总览")]),t._v(" "),_("p",[t._v("HTTPS和HTTP、对称加密和非对称加密、中间人攻击、摘要算法和数字签名算法、数字证书、SSL/TLS与HTTPS链接的建立")])]),t._v(" "),_("h2",{attrs:{id:"http和https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http和https"}},[t._v("#")]),t._v(" HTTP和HTTPS")]),t._v(" "),_("p",[t._v("HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，从而就诞生了HTTPS。简单来说，HTTPS 就是在 HTTP 与 TCP 层之间增加了 SSL/TLS 安全传输层，HTTP的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比HTTP协议安全。")]),t._v(" "),_("p",[t._v("HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL/TLS 的握手过程，才可进入加密报文传输。")]),t._v(" "),_("h2",{attrs:{id:"https特征"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https特征"}},[t._v("#")]),t._v(" HTTPS特征")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("信息加密")]),t._v("：交互信息无法被窃取")]),t._v(" "),_("p",[_("strong",[t._v("混合加密")]),t._v("的方式实现信息的"),_("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("校验机制")]),t._v("：无法篡改通信内容，篡改了就不能正常显示")]),t._v(" "),_("p",[_("strong",[t._v("摘要算法")]),t._v("的方式来实现"),_("strong",[t._v("完整性")]),t._v("，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("身份证书")]),t._v("：CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的")]),t._v(" "),_("p",[t._v("将服务器公钥放入到"),_("strong",[t._v("数字证书")]),t._v("中，解决了冒充的风险。")])])]),t._v(" "),_("p",[t._v("它采用的就是上面说的 “混合加密” + “数字证书” 两种技术，来保证整个通信过程的安全可靠。")]),t._v(" "),_("h2",{attrs:{id:"窃听伪造与否认"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#窃听伪造与否认"}},[t._v("#")]),t._v(" 窃听伪造与否认")]),t._v(" "),_("p",[_("strong",[t._v("窃听")])]),t._v(" "),_("img",{staticStyle:{zoom:"115%"},attrs:{src:v(472),alt:"image-20230328100015486"}}),t._v(" "),_("p",[_("strong",[t._v("伪造")])]),t._v(" "),_("p",[_("img",{attrs:{src:"E:%5CHTMLCSSJavaScript%5CmyBlog%5CJiaze-blog%5Cdocs%5C%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86%5C%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8E%E8%AE%A1%E7%BD%91%5CHTTPS.assets%5Cimage-20230328100101005.png",alt:"image-20230328100101005"}})]),t._v(" "),_("p",[_("strong",[t._v("否认")])]),t._v(" "),_("img",{staticStyle:{zoom:"125%"},attrs:{src:v(473),alt:"image-20230328100230187"}}),t._v(" "),_("h2",{attrs:{id:"对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),_("img",{staticStyle:{zoom:"105%"},attrs:{src:v(474),alt:"image-20230324143409392"}}),t._v(" "),_("p",[_("strong",[t._v("“对称密钥加密” 一个很重要的特点就是使用相同的密钥进行加密和解密")])]),t._v(" "),_("p",[t._v("上面这个场景就会引出一个新问题，这个问题被称为 “钥匙交付问题”，A需要通过互联网将钥匙发送给 B但是 "),_("code",[t._v("X")]),t._v(" 也有可能看到这个钥匙，为了解决问题，引入一个新的方法"),_("strong",[t._v("公开密钥加密")])]),t._v(" "),_("h2",{attrs:{id:"非对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),_("p",[t._v("也称为"),_("strong",[t._v("公开密钥加密")])]),t._v(" "),_("p",[t._v("用于加密的密钥被称为“公钥”，用于解密的密钥被称为“私钥”")]),t._v(" "),_("img",{staticStyle:{zoom:"93%"},attrs:{src:v(475),alt:"image-20230324145606381"}}),t._v(" "),_("img",{staticStyle:{zoom:"103%"},attrs:{src:v(476),alt:"image-20230324143928696"}}),t._v(" "),_("ol",[_("li",[t._v("接收方 B 创建一个公钥和一个私钥，公钥被发送给 A")]),t._v(" "),_("li",[t._v("A 使用从 B收到的公钥加密数据，将密文发送给 B")]),t._v(" "),_("li",[t._v("B使用私钥解密从 A接收到的密文，得到原始数据")])]),t._v(" "),_("h2",{attrs:{id:"混合加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#混合加密"}},[t._v("#")]),t._v(" 混合加密")]),t._v(" "),_("p",[t._v("加密和解密都需要耗费时间，“混合加密” 的方法可以解决这个问题")]),t._v(" "),_("p",[t._v("通过"),_("strong",[t._v("混合加密")]),t._v("的方式可以保证信息的"),_("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(477),alt:"image-20230324144240088"}})]),t._v(" "),_("p",[t._v("HTTPS 采用的是"),_("strong",[t._v("对称加密")]),t._v("和"),_("strong",[t._v("非对称加密")]),t._v("结合的「混合加密」方式：")]),t._v(" "),_("ul",[_("li",[t._v("在通信建立前采用"),_("strong",[t._v("非对称加密")]),t._v("的方式交换「会话秘钥」，后续就不再使用非对称加密。")]),t._v(" "),_("li",[t._v("在通信过程中全部使用"),_("strong",[t._v("对称加密")]),t._v("的「会话秘钥」的方式加密明文数据。")])]),t._v(" "),_("img",{staticStyle:{zoom:"150%"},attrs:{src:v(478),alt:"image-20230328100806934"}}),t._v(" "),_("p",[t._v("采用「混合加密」的方式的原因：")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("对称加密")]),t._v("只使用一个密钥，运算速度快，密钥必须保密，无法做到安全的密钥交换。")]),t._v(" "),_("li",[_("strong",[t._v("非对称加密")]),t._v("使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，解决了密钥交换问题但速度慢。")])]),t._v(" "),_("h2",{attrs:{id:"摘要算法与数字签名算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法与数字签名算法"}},[t._v("#")]),t._v(" 摘要算法与数字签名算法")]),t._v(" "),_("p",[t._v("在计算机里会用摘要算法**（哈希函数）来计算出内容的哈希值**，这个"),_("strong",[t._v("哈希值是唯一的，且无法通过哈希值推导出内容")])]),t._v(" "),_("p",[t._v("通过哈希算法可以确保内容不会被篡改，"),_("strong",[t._v("但是并不能保证「内容 + 哈希值」不会被中间人替换，因为这里缺少对客户端收到的消息是否来源于服务端的证明")]),t._v("。")]),t._v(" "),_("img",{staticStyle:{zoom:"110%"},attrs:{src:v(479),alt:"image-20230328101848823"}}),t._v(" "),_("p",[t._v("那为了避免这种情况，计算机里会用"),_("strong",[t._v("非对称加密算法")]),t._v("来解决，共有两个密钥：")]),t._v(" "),_("ul",[_("li",[t._v("一个是公钥，这个是可以公开给所有人的；")]),t._v(" "),_("li",[t._v("一个是私钥，这个必须由本人管理，不可泄露。")])]),t._v(" "),_("p",[t._v("这两个密钥可以"),_("strong",[t._v("双向加解密")]),t._v("的，比如可以用公钥加密内容，然后用私钥解密，也可以用私钥加密内容，公钥解密内容。")]),t._v(" "),_("p",[t._v("流程的不同，意味着目的也不相同：")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("公钥加密，私钥解密")]),t._v("。这个目的是为了"),_("strong",[t._v("保证内容传输的安全")]),t._v("，因为被公钥加密的内容，其他人是无法解密的，只有持有私钥的人，才能解密出实际的内容；")]),t._v(" "),_("li",[_("strong",[t._v("私钥加密，公钥解密")]),t._v("。这个目的是为了"),_("strong",[t._v("保证消息不会被冒充")]),t._v("，因为私钥是不可泄露的，如果公钥能正常解密出私钥加密的内容，就能证明这个消息是来源于持有私钥身份的人发送的。")])]),t._v(" "),_("p",[t._v("一般我们不会用非对称加密来加密实际的传输内容，因为非对称加密的计算比较耗费性能的。")]),t._v(" "),_("p",[t._v("所以非对称加密的用途主要在于"),_("strong",[t._v("通过「私钥加密，公钥解密」的方式，来确认消息的身份")]),t._v("，我们常说的"),_("strong",[t._v("数字签名算法")]),t._v("，就是用的是这种方式，不过私钥加密内容不是内容本身，而是"),_("strong",[t._v("对内容的哈希值加密")]),t._v("。")]),t._v(" "),_("img",{staticStyle:{zoom:"150%"},attrs:{src:v(480),alt:"image-20230328102534165"}}),t._v(" "),_("p",[t._v("私钥是由服务端保管，然后服务端会向客户端颁发对应的公钥。如果客户端收到的信息，能被公钥解密，就说明该消息是由服务器发送的。")]),t._v(" "),_("h2",{attrs:{id:"中间人攻击"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[t._v("#")]),t._v(" 中间人攻击")]),t._v(" "),_("p",[_("img",{attrs:{src:v(481),alt:"image-20230324145801353"}})]),t._v(" "),_("p",[_("img",{attrs:{src:v(482),alt:"image-20230324145816151"}})]),t._v(" "),_("p",[_("code",[t._v("A")]),t._v(" 拿到的其实是 "),_("code",[t._v("X")]),t._v(" 发送给他的伪造公钥，但是 "),_("code",[t._v("A")]),t._v(" 无法察觉")]),t._v(" "),_("p",[t._v("最后，"),_("code",[t._v("X")]),t._v(" 用他自己的密钥加密响应数据，并发送给 "),_("code",[t._v("A")]),t._v("，就这样，虽然 "),_("code",[t._v("A")]),t._v("、"),_("code",[t._v("B")]),t._v(" 双方能顺利完成通信，但是恶意的第三方 "),_("code",[t._v("X")]),t._v(" 能看到解密后的请求数据和响应数据，而 "),_("code",[t._v("A")]),t._v("、"),_("code",[t._v("B")]),t._v(" 双方则毫不知情。")]),t._v(" "),_("p",[t._v("这种通过秘密替换公钥窃取数据的方法被称为“中间人攻击”，问题的根源在于 "),_("code",[t._v("A")]),t._v(" 无法确认他们收到的公钥是否由 "),_("code",[t._v("B")]),t._v(" 方创建")]),t._v(" "),_("h2",{attrs:{id:"数字证书"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[t._v("#")]),t._v(" 数字证书")]),t._v(" "),_("ul",[_("li",[t._v("可以通过哈希算法来保证消息的完整性；")]),t._v(" "),_("li",[t._v("可以通过数字签名来保证消息的来源可靠性（能确认消息是由持有私钥的一方发送的）；")])]),t._v(" "),_("p",[t._v("但是这还远远不够，"),_("strong",[t._v("还缺少身份验证的环节")]),t._v("，万一公钥是被伪造的呢？如之前的"),_("strong",[t._v("中间人攻击")])]),t._v(" "),_("p",[t._v("于是出现了权威的机构就是 CA （"),_("strong",[t._v("数字证书认证机构")]),t._v("），将服务器公钥放在数字证书（由数字证书认证机构颁发）中，只要证书是可信的，公钥就是可信的，通过数字证书的方式保证服务器公钥的身份，解决冒充的风险。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(483),alt:"image-20230328103148012"}})]),t._v(" "),_("p",[t._v("事实上，认证机构形成一个树形结构，高级别的权威机构为较低级别的机构创建证书，那就是说，如果要验证的话，就是一级一级向上认证，信任链条的最终是Root CA，他采用自签名，对他的签名是无条件的信任。")]),t._v(" "),_("h2",{attrs:{id:"ssl-tls与https链接的建立"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ssl-tls与https链接的建立"}},[t._v("#")]),t._v(" SSL/TLS与HTTPS链接的建立")]),t._v(" "),_("p",[t._v("HTTPS 做的事情其实就是在传输层跟应用层之间加了一层 "),_("code",[t._v("SSL/TLS")]),t._v("，用于对 TCP 传输内容的加密和解密")]),t._v(" "),_("p",[t._v("SSL 是 “"),_("em",[t._v("Secure Sockets Layer")]),t._v("” 的缩写，中文叫做「安全套接层」。它是在上世纪 90 年代中期，由网景公司设计的。")]),t._v(" "),_("p",[t._v("到了1999年，SSL 因为应用广泛，已经成为互联网上的事实标准。IETF 就在那年把 SSL 标准化。标准化之后的名称改为 TLS（是 “"),_("em",[t._v("Transport Layer Security")]),t._v("” 的缩写），中文叫做 「传输层安全协议」。一般把这两者并列称呼（SSL/TLS），因为这两者可以视作同一个东西的不同阶段。")]),t._v(" "),_("p",[t._v("SSL/TLS 协议基本流程：")]),t._v(" "),_("ul",[_("li",[t._v("客户端向服务器索要并验证服务器的公钥。")]),t._v(" "),_("li",[t._v("双方协商生产「会话秘钥」。")]),t._v(" "),_("li",[t._v("双方采用「会话秘钥」进行加密通信。")])]),t._v(" "),_("p",[t._v("前两步也就是 SSL/TLS 的建立过程，涉及"),_("strong",[t._v("四次")]),t._v("通信，使用不同的密钥交换算法，TLS 握手流程也会不一样的，现在常用的密钥交换算法有两种：RSA 算法和 ECDHE 算法")]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("p",[_("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 协议入门 - 阮一峰的网络日志 (ruanyifeng.com)"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("图解HTTP")])]),t._v(" "),_("p",[_("strong",[t._v("小林coding")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/43789231",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底搞懂HTTPS的加密原理 - 知乎 (zhihu.com)"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903764399243278#heading-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("完全图解 HTTPS - 掘金 (juejin.cn)"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=a.exports}}]);