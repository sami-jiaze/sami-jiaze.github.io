(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{468:function(t,_,v){t.exports=v.p+"assets/img/image-20230324143409392.2ddcb6ac.png"},469:function(t,_,v){t.exports=v.p+"assets/img/image-20230324145606381.c454cef3.png"},470:function(t,_,v){t.exports=v.p+"assets/img/image-20230324143928696.3c9da3fc.png"},471:function(t,_,v){t.exports=v.p+"assets/img/image-20230324144240088.368b9297.png"},472:function(t,_,v){t.exports=v.p+"assets/img/image-20230324145801353.ec5ced34.png"},473:function(t,_,v){t.exports=v.p+"assets/img/image-20230324145816151.41f1f21a.png"},600:function(t,_,v){"use strict";v.r(_);var s=v(2),r=Object(s.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("总览")]),t._v(" "),_("p",[t._v("中间人攻击、HTTPS加密过程、对称加密")])]),t._v(" "),_("h2",{attrs:{id:"http和https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http和https"}},[t._v("#")]),t._v(" HTTP和HTTPS")]),t._v(" "),_("p",[t._v("HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，从而就诞生了HTTPS。简单来说，HTTPS 就是在 HTTP 与 TCP 层之间增加了 SSL/TLS 安全传输层，HTTP的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比HTTP协议安全。")]),t._v(" "),_("p",[t._v("HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL/TLS 的握手过程，才可进入加密报文传输。")]),t._v(" "),_("h2",{attrs:{id:"https特征"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https特征"}},[t._v("#")]),t._v(" HTTPS特征")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("信息加密")]),t._v("：交互信息无法被窃取")]),t._v(" "),_("p",[_("strong",[t._v("混合加密")]),t._v("的方式实现信息的"),_("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("校验机制")]),t._v("：无法篡改通信内容，篡改了就不能正常显示")]),t._v(" "),_("p",[_("strong",[t._v("摘要算法")]),t._v("的方式来实现"),_("strong",[t._v("完整性")]),t._v("，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("身份证书")]),t._v("：CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的")]),t._v(" "),_("p",[t._v("将服务器公钥放入到"),_("strong",[t._v("数字证书")]),t._v("中，解决了冒充的风险。")])])]),t._v(" "),_("h2",{attrs:{id:"对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),_("p",[_("img",{attrs:{src:v(468),alt:"image-20230324143409392"}})]),t._v(" "),_("p",[_("strong",[t._v("“对称密钥加密” 一个很重要的特点就是使用相同的密钥进行加密和解密")])]),t._v(" "),_("p",[t._v("上面这个场景就会引出一个新问题，这个问题被称为 “钥匙交付问题”，A需要通过互联网将钥匙发送给 B但是 "),_("code",[t._v("X")]),t._v(" 也有可能看到这个钥匙，为了解决问题，引入一个新的方法"),_("strong",[t._v("公开密钥加密")])]),t._v(" "),_("h2",{attrs:{id:"公开密钥加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#公开密钥加密"}},[t._v("#")]),t._v(" 公开密钥加密")]),t._v(" "),_("p",[t._v("用于加密的密钥被称为“公钥”，用于解密的密钥被称为“私钥”")]),t._v(" "),_("p",[_("img",{attrs:{src:v(469),alt:"image-20230324145606381"}})]),t._v(" "),_("img",{staticStyle:{zoom:"110%"},attrs:{src:v(470),alt:"image-20230324143928696"}}),t._v(" "),_("ol",[_("li",[t._v("接收方 B 创建一个公钥和一个私钥，公钥被发送给 A")]),t._v(" "),_("li",[t._v("A 使用从 B收到的公钥加密数据，将密文发送给 B")]),t._v(" "),_("li",[t._v("B使用私钥解密从 A接收到的密文，得到原始数据")])]),t._v(" "),_("h2",{attrs:{id:"混合加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#混合加密"}},[t._v("#")]),t._v(" 混合加密")]),t._v(" "),_("p",[t._v("加密和解密都需要耗费时间，“混合加密” 的方法可以解决这个问题")]),t._v(" "),_("p",[t._v("通过"),_("strong",[t._v("混合加密")]),t._v("的方式可以保证信息的"),_("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(471),alt:"image-20230324144240088"}})]),t._v(" "),_("p",[t._v("HTTPS 采用的是"),_("strong",[t._v("对称加密")]),t._v("和"),_("strong",[t._v("非对称加密")]),t._v("结合的「混合加密」方式：")]),t._v(" "),_("ul",[_("li",[t._v("在通信建立前采用"),_("strong",[t._v("非对称加密")]),t._v("的方式交换「会话秘钥」，后续就不再使用非对称加密。")]),t._v(" "),_("li",[t._v("在通信过程中全部使用"),_("strong",[t._v("对称加密")]),t._v("的「会话秘钥」的方式加密明文数据。")])]),t._v(" "),_("p",[t._v("采用「混合加密」的方式的原因：")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("对称加密")]),t._v("只使用一个密钥，运算速度快，密钥必须保密，无法做到安全的密钥交换。")]),t._v(" "),_("li",[_("strong",[t._v("非对称加密")]),t._v("使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，解决了密钥交换问题但速度慢。")])]),t._v(" "),_("h2",{attrs:{id:"中间人攻击"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[t._v("#")]),t._v(" 中间人攻击")]),t._v(" "),_("p",[_("img",{attrs:{src:v(472),alt:"image-20230324145801353"}})]),t._v(" "),_("p",[_("img",{attrs:{src:v(473),alt:"image-20230324145816151"}})]),t._v(" "),_("p",[_("code",[t._v("A")]),t._v(" 拿到的其实是 "),_("code",[t._v("X")]),t._v(" 发送给他的伪造公钥，但是 "),_("code",[t._v("A")]),t._v(" 无法察觉")]),t._v(" "),_("p",[t._v("最后，"),_("code",[t._v("X")]),t._v(" 用他自己的密钥加密响应数据，并发送给 "),_("code",[t._v("A")]),t._v("，就这样，虽然 "),_("code",[t._v("A")]),t._v("、"),_("code",[t._v("B")]),t._v(" 双方能顺利完成通信，但是恶意的第三方 "),_("code",[t._v("X")]),t._v(" 能看到解密后的请求数据和响应数据，而 "),_("code",[t._v("A")]),t._v("、"),_("code",[t._v("B")]),t._v(" 双方则毫不知情。")]),t._v(" "),_("p",[t._v("这种通过秘密替换公钥窃取数据的方法被称为“中间人攻击”，问题的根源在于 "),_("code",[t._v("A")]),t._v(" 无法确认他们收到的公钥是否由 "),_("code",[t._v("B")]),t._v(" 方创建")]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("p",[_("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 协议入门 - 阮一峰的网络日志 (ruanyifeng.com)"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("图解HTTP")])]),t._v(" "),_("p",[_("strong",[t._v("小林coding")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/43789231",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底搞懂HTTPS的加密原理 - 知乎 (zhihu.com)"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903764399243278#heading-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("完全图解 HTTPS - 掘金 (juejin.cn)"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=r.exports}}]);