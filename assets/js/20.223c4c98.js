(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{464:function(t,a,e){t.exports=e.p+"assets/img/image-20230803210713594.f69c1ead.png"},465:function(t,a,e){t.exports=e.p+"assets/img/w.6732066a.jpg"},466:function(t,a,e){t.exports=e.p+"assets/img/image-20230803174035895.4e1c706a.png"},467:function(t,a,e){t.exports=e.p+"assets/img/image-20230803182031799.72f63805.png"},468:function(t,a,e){t.exports=e.p+"assets/img/image-20230803175530323.17375a3c.png"},672:function(t,a,e){"use strict";e.r(a);var n=e(2),s=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),a("p",[t._v("总览Webpack,Webpack编译原理、流程,Webpack plugin的基本架构，compiler与compilation")])]),t._v(" "),a("h2",{attrs:{id:"基本流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本流程"}},[t._v("#")]),t._v(" 基本流程")]),t._v(" "),a("p",[a("img",{attrs:{src:e(464),alt:"image-20230803210713594"}})]),t._v(" "),a("p",[t._v("初始化阶段：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("初始化参数")]),t._v("：从配置文件、 配置对象、Shell 参数中读取，与默认配置结合得出最终的参数")]),t._v(" "),a("li",[a("strong",[t._v("创建编译器对象")]),t._v("：用上一步得到的参数创建 "),a("code",[t._v("Compiler")]),t._v(" 对象")]),t._v(" "),a("li",[a("strong",[t._v("初始化编译环境")]),t._v("：包括注入内置插件、注册各种模块工厂、初始化 RuleSet 集合、加载配置的插件等")]),t._v(" "),a("li",[a("strong",[t._v("开始编译")]),t._v("：执行 "),a("code",[t._v("compiler")]),t._v(" 对象的 "),a("code",[t._v("run")]),t._v(" 方法")]),t._v(" "),a("li",[a("strong",[t._v("确定入口")]),t._v("：根据配置中的 "),a("code",[t._v("entry")]),t._v(" 找出所有的入口文件，调用 "),a("code",[t._v("compilition.addEntry")]),t._v(" 将入口文件转换为 "),a("code",[t._v("dependence")]),t._v(" 对象")])]),t._v(" "),a("p",[t._v("构建阶段：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("编译模块(make)")]),t._v("：根据 "),a("code",[t._v("entry")]),t._v(" 对应的 "),a("code",[t._v("dependence")]),t._v(" 创建 "),a("code",[t._v("module")]),t._v(" 对象，调用 "),a("code",[t._v("loader")]),t._v(" 将模块转译为标准 JS 内容，调用 JS 解释器将内容转换为 AST 对象，从中找出该模块依赖的模块，再 递归 本步骤直到所有入口依赖的文件都经过了本步骤的处理")]),t._v(" "),a("li",[a("strong",[t._v("完成模块编译")]),t._v("：上一步递归处理所有能触达到的模块后，得到了每个模块被翻译后的内容以及它们之间的 "),a("strong",[t._v("依赖关系图")])])]),t._v(" "),a("p",[t._v("生成阶段：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("输出资源(seal)")]),t._v("：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 "),a("code",[t._v("Chunk")]),t._v("，再把每个 "),a("code",[t._v("Chunk")]),t._v(" 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会")]),t._v(" "),a("li",[a("strong",[t._v("写入文件系统(emitAssets)")]),t._v("：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统")])]),t._v(" "),a("h2",{attrs:{id:"webpack基本工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack基本工作原理"}},[t._v("#")]),t._v(" webpack基本工作原理")]),t._v(" "),a("p",[a("img",{attrs:{src:e(465),alt:"w"}})]),t._v(" "),a("p",[a("strong",[t._v("依赖分析")])]),t._v(" "),a("p",[t._v("webpack主要功能是从入口文件开始读取文件源码，找到它的依赖。然后读取依赖文件，继续找它们的依赖，一直递归下去。")]),t._v(" "),a("p",[a("strong",[t._v("模块映射")])]),t._v(" "),a("p",[t._v("在依赖分析期间，webpack会进行模块映射，把分析过的文件内容都放在一个map中(大文件)，通过文件路径及文件名相关联的值作为key。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(466),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[t._v("在 Compiler 运行的过程中，webpack 定义了许多生命周期。先放一张总览图（排除 watch 和错误处理）：正是由于有如此多的生命周期开放出来，所以 webpack 的插件机制很强大，可以灵活的介入编译的各个环节")]),t._v(" "),a("p",[a("img",{attrs:{src:e(467),alt:"image-20230803182031799"}})]),t._v(" "),a("h2",{attrs:{id:"插件api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件api"}},[t._v("#")]),t._v(" 插件API")]),t._v(" "),a("ul",[a("li",[t._v("compiler: 顶级API，"),a("code",[t._v("Compiler")]),t._v("类的实例，webpack 从开始执行到结束，"),a("code",[t._v("Compiler")]),t._v("只会实例化一次。compiler 对象记录了 webpack 运行环境的所有的信息，插件可以通过它获取到 webpack 的配置信息，如"),a("code",[t._v("entry、output、module")]),t._v("等配置。")]),t._v(" "),a("li",[t._v("compilation: 通过compiler访问，"),a("code",[t._v("Compilation")]),t._v("类实例，提供了 webpack 大部分生命周期Hook API供自定义处理时做拓展使用。一个 compilation 对象记录了一次构建到生成资源过程中的信息，它储存了当前的模块资源、编译生成的资源、变化的文件、以及被跟踪依赖的状态信息。")]),t._v(" "),a("li",[t._v("Resolvers: webpack会把entry的配置路径提供给 Resolver，它会检查给定的部分路径是否存在，并返回完整的绝对路径以及上下文、请求、调用等额外信息。在 "),a("code",[t._v("compiler")]),t._v(" 类中，提供了三种类型的内置解析器："),a("code",[t._v("normal")]),t._v(": 通过绝对或相对路径解析模块；"),a("code",[t._v("context")]),t._v(": 在给定的上下文中解析模块。；"),a("code",[t._v("loader")]),t._v(": 解析 webpack loader。")]),t._v(" "),a("li",[t._v("NormalModuleFactory 与 ContextModuleFactory Hooks: 工厂创建对象或实例。从入口点开始，它解析每个请求，解析内容以查找进一步的请求，并通过解析所有文件和解析任何新文件来继续爬取文件。在最后阶段，每个依赖项都成为一个 Module 实例。")]),t._v(" "),a("li",[t._v("JavascriptParser: 提供模块解释的API，让开发者可以自定义处理模块解释的过程。")])]),t._v(" "),a("h2",{attrs:{id:"tapable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tapable"}},[t._v("#")]),t._v(" Tapable")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fwebpack%2Ftapable",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tapable"),a("OutboundLink")],1),t._v(" 是 Webpack 插件架构的核心支架，本质上就是围绕着 订阅/发布 模式叠加各种特化逻辑")]),t._v(" "),a("p",[t._v("Webpack API都继承了Tapable类。Tapable使用发布订阅模式，封装了一系列API控制钩子函数的发布与订阅。")]),t._v(" "),a("p",[t._v("tapable模块下4个类:")]),t._v(" "),a("ul",[a("li",[t._v("SyncHook: 同步钩子，任务会从先到后依次逐个执行。")]),t._v(" "),a("li",[t._v("SyncBailHook: 确保同步钩子，提供终止机制中断钩子任务执行。按顺序执行注册的消费者回调，一旦其中一个消费者return返回值，立刻中断后续执行")]),t._v(" "),a("li",[t._v("AsyncSeriesHook: 异步串行任务钩子。")]),t._v(" "),a("li",[t._v("AsyncParallelHook: 异步并行任务钩子。")])]),t._v(" "),a("h2",{attrs:{id:"compiler-和-compilation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler-和-compilation"}},[t._v("#")]),t._v(" compiler 和 compilation")]),t._v(" "),a("p",[a("code",[t._v("Compiler")]),t._v(" 模块是 webpack 的主要引擎，它通过 "),a("a",{attrs:{href:"https://www.webpackjs.com/api/cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("CLI"),a("OutboundLink")],1),t._v(" 或者 "),a("a",{attrs:{href:"https://www.webpackjs.com/api/node",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node API"),a("OutboundLink")],1),t._v(" 传递的所有选项创建出一个 compilation 实例。 它扩展（extends）自 "),a("code",[t._v("Tapable")]),t._v(" 类，用来注册和调用插件。 大多数面向用户的插件会首先在 "),a("code",[t._v("Compiler")]),t._v(" 上注册。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(468),alt:"image-20230803175530323"}})]),t._v(" "),a("p",[a("code",[t._v("Compilation")]),t._v("的职责就是对所有 require 图(graph)中对象的字面上的编译，编译构建 module 和 chunk，并调用插件构建过程，同时把本次构建编译的内容全存到内存里。webpack 运行过程中只会有一个 "),a("code",[t._v("compiler")]),t._v(" ；而每次编译 包括调用 "),a("code",[t._v("compiler.run")]),t._v(" 函数或者 "),a("code",[t._v("watch = true")]),t._v(" 时文件发生变更，都会创建一个 "),a("code",[t._v("compilation")]),t._v(" 对象，compilation 编译可以多次执行，如在watch模式下启动 webpack，每次监测到源文件发生变化，都会重新实例化一个compilation对象，从而生成一组新的编译资源对象。这个对象可以访问所有的模块和它们的依赖。")]),t._v(" "),a("p",[a("code",[t._v("compiler")]),t._v(" 对象记录着构建过程中 "),a("code",[t._v("webpack")]),t._v(" 环境与配置信息，整个 "),a("code",[t._v("webpack")]),t._v(" 从开始到结束的生命周期。针对的是webpack。")]),t._v(" "),a("p",[a("code",[t._v("compilation")]),t._v(" 对象记录编译模块的信息，只要项目文件有改动，"),a("code",[t._v("compilation")]),t._v(" 就会被重新创建。针对的是随时可变的项目文件。")]),t._v(" "),a("h2",{attrs:{id:"webpack-plugin-的基本架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-plugin-的基本架构"}},[t._v("#")]),t._v(" webpack plugin 的基本架构")]),t._v(" "),a("p",[t._v("插件需要封装成class，当webpack安装插件时，会对class进行实例化，并调用实例下的"),a("code",[t._v("apply")]),t._v("方法。调用"),a("code",[t._v("apply")]),t._v("方法时候，会把"),a("code",[t._v("compiler")]),t._v("对象作为参数的形式传入，"),a("code",[t._v("compiler")]),t._v("是webpack底层编译对象的引用，开发者可以在"),a("code",[t._v("apply")]),t._v("方法实现中使用"),a("code",[t._v("compiler")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloCompilationPlugin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compiler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定一个挂载到 compilation 的钩子，回调函数的参数为 compilation 。")]),t._v("\n    compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compilation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HelloCompilationPlugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compilation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在可以通过 compilation 对象绑定各种钩子")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'现在可以通过 compilation 对象绑定各种钩子'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      compilation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("optimize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HelloCompilationPlugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'资源已经优化完毕。'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HelloCompilationPlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[t._v("["),a("a",{attrs:{href:"https://juejin.cn/post/6949040393165996040",target:"_blank",rel:"noopener noreferrer"}},[t._v("万字总结] 一文吃透 Webpack 核心原理 - 掘金 (juejin.cn)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6969443457450393607",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 编译原理(How webpack compiles) - 掘金 (juejin.cn)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903573675835400#heading-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack详解 - 掘金 (juejin.cn)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7068482202669056037#heading-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack plugin 从入门到入门 - 掘金 (juejin.cn)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7068930184887402509#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack plugin 从入门到入门 之compiler与compilation - 掘金 (juejin.cn)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/api/compilation-hooks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 中文文档 | webpack 中文文档 | webpack 中文网 (webpackjs.com)"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("掘金小册 《Webpack5 核心原理与应用实践》")])])}),[],!1,null,null,null);a.default=s.exports}}]);