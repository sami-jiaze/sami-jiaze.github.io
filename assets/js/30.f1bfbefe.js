(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{447:function(t,s,a){t.exports=a.p+"assets/img/image-20230322174538826.c76e60c9.png"},448:function(t,s,a){t.exports=a.p+"assets/img/image-20230322163803619.1bdf6c0a.png"},449:function(t,s,a){t.exports=a.p+"assets/img/image-20230322164701134.f0a535f7.png"},659:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("p",[t._v("词法环境、执行上下文、作用域、闭包笔记总结")])]),t._v(" "),s("h2",{attrs:{id:"执行栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[t._v("#")]),t._v(" 执行栈")]),t._v(" "),s("p",[t._v("执行栈，也就是在其它编程语言中所说的“调用栈”，是一种拥有 LIFO（后进先出）数据结构的栈，被用来存储代码运行时创建的所有执行上下文。")]),t._v(" "),s("p",[t._v("当 JavaScript 引擎第一次遇到你的脚本时，它会创建一个全局的执行上下文并且压入当前执行栈。每当引擎遇到一个函数调用，它会为该函数创建一个新的执行上下文并压入栈的顶部。")]),t._v(" "),s("p",[t._v("引擎会执行那些执行上下文位于栈顶的函数。当该函数执行结束时，执行上下文从栈中弹出，控制流程到达当前栈中的下一个上下文。")]),t._v(" "),s("h2",{attrs:{id:"执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),s("p",[t._v("执行上下文（Execution context stack），一个解析和执行代码的环境；即代码都在执行上下文中运行。是一个抽象的概念。")]),t._v(" "),s("p",[s("strong",[t._v("（1）全局执行上下文")])]),t._v(" "),s("p",[t._v("任何不在函数内部的都是全局执行上下文，它首先会创建一个全局的window对象，并且设置this的值等于这个全局对象，一个程序中只有一个全局执行上下文。")]),t._v(" "),s("p",[s("strong",[t._v("（2）函数执行上下文")])]),t._v(" "),s("p",[t._v("当一个函数被调用时，就会为该函数创建一个新的执行上下文，函数的上下文可以有任意多个")]),t._v(" "),s("p",[t._v("JavaScript引擎使用执行上下文栈来管理执行上下文")]),t._v(" "),s("p",[t._v("当JavaScript执行代码时，首先遇到全局代码，会创建一个全局执行上下文并且压入执行栈中，每当遇到一个函数调用，就会为该函数创建一个新的执行上下文并压入栈顶，引擎会执行位于执行上下文栈顶的函数，当函数执行完成之后，执行上下文从栈中弹出，继续执行下一个上下文。当所有的代码都执行完毕之后，从栈中弹出全局执行上下文。")]),t._v(" "),s("p",[t._v("对于每个执行上下文，都有三个重要属性：")]),t._v(" "),s("ul",[s("li",[t._v("变量对象(Variable object，VO)")]),t._v(" "),s("li",[t._v("作用域链(Scope chain)")]),t._v(" "),s("li",[t._v("this")])]),t._v(" "),s("h2",{attrs:{id:"创建执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建执行上下文"}},[t._v("#")]),t._v(" 创建执行上下文")]),t._v(" "),s("p",[t._v("创建执行上下文有两个阶段："),s("strong",[t._v("创建阶段")]),t._v(" 和 "),s("strong",[t._v("执行阶段")]),t._v("。")]),t._v(" "),s("p",[t._v("在创建阶段会发生三件事：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("this")]),t._v(" 值的决定，即我们所熟知的 "),s("strong",[t._v("This 绑定")]),t._v("。")]),t._v(" "),s("p",[t._v("在全局执行上下文中，"),s("code",[t._v("this")]),t._v(" 的值指向全局对象。(在浏览器中，"),s("code",[t._v("this")]),t._v("引用 Window 对象)。")]),t._v(" "),s("p",[t._v("在函数执行上下文中，"),s("code",[t._v("this")]),t._v(" 的值取决于该函数是如何被调用的。如果它被一个引用对象调用，那么 "),s("code",[t._v("this")]),t._v(" 会被设置成那个对象，否则 "),s("code",[t._v("this")]),t._v(" 的值被设置为全局对象或者 "),s("code",[t._v("undefined")]),t._v("（在严格模式下")])]),t._v(" "),s("li",[s("p",[t._v("创建"),s("strong",[t._v("词法环境")]),t._v("组件。")])]),t._v(" "),s("li",[s("p",[t._v("创建"),s("strong",[t._v("变量环境")]),t._v("组件。")])])]),t._v(" "),s("h2",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),s("p",[t._v("作用域就是一个独立的区域，它可以让变量不会向外暴露出去。作用域最大的用处就是隔离变量。内层作用域可以访问外层作用域。一个作用域下可能包含若干个执行上下文。")]),t._v(" "),s("p",[t._v("（1）全局作用域")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("直接写在script标签的JS代码，都在全局作用域。在全局作用域下声明的变量叫做全局变量（在块级外部定义的变量）。")])]),t._v(" "),s("li",[s("p",[t._v("全局变量在全局的任何位置下都可以使用；全局作用域中无法访问到局部作用域的中的变量。")])]),t._v(" "),s("li",[s("p",[t._v("全局作用域在页面打开的时候创建，在页面关闭时销毁。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("所有 window 对象的属性拥有全局作用域")])]),t._v(" "),s("p",[t._v("var和function命令声明的全局变量和函数是window对象的属性和方法")]),t._v(" "),s("p",[t._v("let命令、const命令、class命令声明的全局变量，不属于window对象的属性")])])]),t._v(" "),s("p",[t._v("（2）函数作用域(局部作用域)")]),t._v(" "),s("ul",[s("li",[t._v("调用函数时会创建函数作用域，函数执行完毕以后，作用域销毁。每调用一次函数就会创建一个新的函数作用域，他们之间是相互独立的。")]),t._v(" "),s("li",[t._v("在函数作用域中可以访问全局变量，在函数的外面无法访问函数内的变量。")]),t._v(" "),s("li",[t._v("当在函数作用域操作一个变量时，它会先在自身作用域中寻找，如果有就直接使用，如果没有就向上一作用域中寻找，直到找到全局作用域，如果全局作用域中仍然没有找到，则会报错。")])]),t._v(" "),s("p",[t._v("（3）块级作用域")]),t._v(" "),s("ul",[s("li",[t._v("ES6之前JavaScript采用的是函数作用域+词法作用域，ES6引入了块级作用域。")]),t._v(" "),s("li",[t._v("任何一对花括号{}中的语句集都属于一个块,"),s("strong",[t._v("在块中使用let和const声明的变量")]),t._v("，外部是访问不到的，这种作用域的规则就叫块级作用域。")]),t._v(" "),s("li",[t._v("通过var声明的变量或者非严格模式下创建的函数声明没有块级作用域。")])]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("p",[t._v("闭包就是指有权访问另一个函数作用域中的变量的函数。")]),t._v(" "),s("p",[t._v("浏览器在加载页面会把代码放在栈内存（ ECStack ）中执行，函数进栈执行会产生一个私有上下文（ EC ），此上下文能保护里面的使用变量（ AO ）不受外界干扰，并且如果当前执行上下文中的某些内容，被上下文以外的内容占用，当前上下文不会出栈释放，这样可以保存里面的变量和变量值，所以闭包是一种保存和保护内部私有变量的机制。")]),t._v(" "),s("h2",{attrs:{id:"词法环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法环境"}},[t._v("#")]),t._v(" 词法环境")]),t._v(" "),s("p",[t._v("在 JavaScript 中，词法环境（Lexical Environment）是表示变量和函数标识符（Identifier）绑定的集合，使得 JavaScript 引擎可以通过标识符找到对应的变量值和函数。词法环境也是变量和函数的作用域（Scope）。")]),t._v(" "),s("p",[t._v("简单来说"),s("strong",[t._v("词法环境")]),t._v("是一种持有"),s("strong",[t._v("标识符—变量映射")]),t._v("的结构。（这里的"),s("strong",[t._v("标识符")]),t._v("指的是变量/函数的名字，而"),s("strong",[t._v("变量")]),t._v("是对实际对象[包含函数类型对象]或原始数据的引用）。")]),t._v(" "),s("p",[t._v("一个词法环境可以有一个或多个父级词法环境，形成一个词法环境链（Lexical Environment Chain）。这个链条在执行 JavaScript 代码时进行查找，直到找到目标标识符绑定的值或到达全局环境为止。全局环境的词法环境链上不存在任何父级词法环境。")]),t._v(" "),s("p",[t._v("现在，在词法环境的"),s("strong",[t._v("内部")]),t._v("有两个组件：(1) "),s("strong",[t._v("环境记录器")]),t._v("和 (2) 一个"),s("strong",[t._v("外部环境的引用")]),t._v("。")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("环境记录器")]),t._v("是存储变量和函数声明的实际位置。")]),t._v(" "),s("li",[s("strong",[t._v("外部环境的引用")]),t._v("意味着它可以访问其父级词法环境（作用域）。")])]),t._v(" "),s("h2",{attrs:{id:"词法环境内部组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法环境内部组成"}},[t._v("#")]),t._v(" 词法环境内部组成")]),t._v(" "),s("p",[t._v("在 JavaScript 中，每个运行的函数，代码块 "),s("code",[t._v("{...}")]),t._v(" 以及整个脚本，都有一个被称为 词法环境（Lexical Environment） 的内部（隐藏）的关联对象。")]),t._v(" "),s("p",[s("strong",[t._v("词法环境对象")]),t._v("由两部分组成：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**环境记录（Environment Record）**一个存储变量和函数标识符以及它们的绑定关系的对象")]),t._v(" "),s("p",[t._v("1.声明式环境记录（Declarative Environment Record）")]),t._v(" "),s("p",[t._v("用来存储变量、函数声明和块级作用域声明等声明的绑定关系，例如 let、const、class、function 等声明。")]),t._v(" "),s("p",[t._v("2.对象式环境记录（Object Environment Record）")]),t._v(" "),s("p",[t._v("用来存储 this 和 with 语句等的绑定关系。对象式环境记录可以看作是一个指向外部对象的引用。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("对外部词法环境的引用")]),t._v("(Outer Lexical Environment Reference)，与外部代码相关联。")]),t._v(" "),s("p",[t._v("外部词法环境引用是指指向父级词法环境的引用，形成了一个词法环境链，用于支持词法作用域。全局环境的外部词法环境引用为 null。")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:a(447),alt:"image-20230322174538826"}})])]),t._v(" "),s("p",[t._v("一个“变量”只是 "),s("strong",[t._v("环境记录")]),t._v(" 这个特殊的内部对象的一个属性。“获取或修改变量”意味着“获取或修改词法环境的一个属性”。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(448),alt:"image-20230322163803619"}})]),t._v(" "),s("p",[t._v("矩形表示环境记录（变量存储），箭头表示外部引用。全局词法环境没有外部引用，所以箭头指向了 "),s("code",[t._v("null")]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("当脚本开始运行，词法环境预先填充了所有声明的变量。\n"),s("ul",[s("li",[t._v("最初，它们处于“未初始化（Uninitialized）”状态。这是一种特殊的内部状态，这意味着引擎知道变量，但是在用 "),s("code",[t._v("let")]),t._v(" 声明前，不能引用它。几乎就像变量不存在一样。")])])]),t._v(" "),s("li",[t._v("然后 "),s("code",[t._v("let phrase")]),t._v(" 定义出现了。它尚未被赋值，因此它的值为 "),s("code",[t._v("undefined")]),t._v("。从这一刻起，我们就可以使用变量了。")]),t._v(" "),s("li",[s("code",[t._v("phrase")]),t._v(" 被赋予了一个值。")]),t._v(" "),s("li",[s("code",[t._v("phrase")]),t._v(" 的值被修改。")])]),t._v(" "),s("p",[s("strong",[t._v("词法环境是一个规范对象")])]),t._v(" "),s("p",[t._v("“词法环境”是一个规范对象（specification object）：它只存在于 "),s("a",{attrs:{href:"https://tc39.es/ecma262/#sec-lexical-environments",target:"_blank",rel:"noopener noreferrer"}},[t._v("语言规范"),s("OutboundLink")],1),t._v(" 的“理论”层面，用于描述事物是如何工作的。我们无法在代码中获取该对象并直接对其进行操作。")]),t._v(" "),s("p",[t._v("但 JavaScript 引擎同样可以优化它，比如清除未被使用的变量以节省内存和执行其他内部技巧等，但显性行为应该是和上述的无差。")]),t._v(" "),s("h2",{attrs:{id:"内部和外部的词法环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内部和外部的词法环境"}},[t._v("#")]),t._v(" 内部和外部的词法环境")]),t._v(" "),s("p",[t._v("当代码要访问一个变量时 —— 首先会搜索内部词法环境，然后搜索外部环境，然后搜索更外部的环境，以此类推，直到全局词法环境。")]),t._v(" "),s("p",[t._v("如果在任何地方都找不到这个变量，那么在严格模式下就会报错（在非严格模式下，为了向下兼容，给未定义的变量赋值会创建一个全局变量）。")]),t._v(" "),s("p",[t._v("在一个函数运行时，在调用刚开始时，会自动创建一个新的词法环境以存储这个调用的局部变量和参数。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(449),alt:"image-20230322164701134"}})]),t._v(" "),s("p",[t._v("在这个函数调用期间，我们有两个词法环境：内部一个（用于函数调用）和外部一个（全局）：")]),t._v(" "),s("ul",[s("li",[t._v("内部词法环境与 "),s("code",[t._v("say")]),t._v(" 的当前执行相对应。它具有一个单独的属性："),s("code",[t._v("name")]),t._v("，函数的参数。我们调用的是 "),s("code",[t._v('say("John")')]),t._v("，所以 "),s("code",[t._v("name")]),t._v(" 的值为 "),s("code",[t._v('"John"')]),t._v("。")]),t._v(" "),s("li",[t._v("外部词法环境是全局词法环境。它具有 "),s("code",[t._v("phrase")]),t._v(" 变量和函数本身。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("答案是 0和1")]),t._v(" "),s("p",[t._v("函数 "),s("code",[t._v("counter")]),t._v(" 和 "),s("code",[t._v("counter2")]),t._v(" 是通过 "),s("code",[t._v("makeCounter")]),t._v(" 的不同调用创建的。")]),t._v(" "),s("p",[t._v("因此，它们具有独立的外部词法环境，每一个都有自己的 "),s("code",[t._v("count")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("p",[t._v("js 变量查找的方式是通过作用域链来查找，而不是通过执行上下文从上到下查找。每个执行上下文中会定义下一个查找变量的执行上下文的位置，形成了作用域链，每个节点的指向取决于函数的实际位置。这种以实际位置形成作用域的方式，就叫它词法作用域")]),t._v(" "),s("h2",{attrs:{id:"暂时性死区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂时性死区"}},[t._v("#")]),t._v(" 暂时性死区")]),t._v(" "),s("p",[t._v("从程序执行进入代码块（或函数）的那一刻起，变量就开始进入“未初始化”状态。它一直保持未初始化状态，直至程序执行到相应的 "),s("code",[t._v("let")]),t._v(" 语句。换句话说，一个变量从技术的角度来讲是存在的，但是在 "),s("code",[t._v("let")]),t._v(" 之前还不能使用")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"函数提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数提升"}},[t._v("#")]),t._v(" 函数提升")]),t._v(" "),s("p",[t._v("函数提升只针对具名函数，而对于赋值的匿名函数，并不会存在函数提升。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f a()")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined     ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h2",{attrs:{id:"变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[t._v("#")]),t._v(" 变量提升")]),t._v(" "),s("p",[t._v("函数提升优先级高于变量提升，且不会被同名变量声明覆盖，但是会被变量赋值后覆盖。而且存在同名函数与同名变量时，优先执行函数。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f a()")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1   ")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a not a function")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("strong",[t._v("JavaScript高级程序设计（第4版）")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zh.javascript.info/",target:"_blank",rel:"noopener noreferrer"}},[t._v("现代 JavaScript 教程"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000042621269",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解JavaScript——词法环境 - 个人文章 - SegmentFault 思否"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("["),s("a",{attrs:{href:"https://juejin.cn/post/6844903682283143181#heading-9",target:"_blank",rel:"noopener noreferrer"}},[t._v("译] 理解 JavaScript 中的执行上下文和执行栈 - 掘金 (juejin.cn)"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);