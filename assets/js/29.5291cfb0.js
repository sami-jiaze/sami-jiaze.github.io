(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{464:function(e,a,n){e.exports=n.p+"assets/img/image-20230401160125390.d09dffb0.png"},465:function(e,a,n){e.exports=n.p+"assets/img/image-20230321084803087.b0abc25e.png"},466:function(e,a,n){e.exports=n.p+"assets/img/image-20230321085306628.051fc4c9.png"},652:function(e,a,n){"use strict";n.r(a);var s=n(2),t=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("说明")]),e._v(" "),a("p",[e._v("npm、yarn、pnpm、npx、npm install笔记总结")])]),e._v(" "),a("h2",{attrs:{id:"npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[e._v("#")]),e._v(" npm")]),e._v(" "),a("p",[e._v("npm（“Node 包管理器”）是 JavaScript 运行时 Node.js 的默认程序包管理器。")]),e._v(" "),a("p",[e._v("它也被称为“Ninja Pumpkin Mutants”，“Nonprofit Pizza Makers”，以及许多其他随机名称，你可以在  "),a("a",{attrs:{href:"https://github.com/npm/npm-expansions",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm-expansions"),a("OutboundLink")],1),e._v(" 上探索这些名称。")]),e._v(" "),a("p",[e._v("npm 由两个主要部分组成:")]),e._v(" "),a("ul",[a("li",[e._v("用于发布和下载程序包的 CLI（命令行界面）工具")]),e._v(" "),a("li",[e._v("托管 JavaScript 程序包的  "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("在线存储库"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"yarn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[e._v("#")]),e._v(" yarn")]),e._v(" "),a("p",[e._v("Yarn 是由 Facebook、Google、Exponent 和 Tilde 联合推出了一个新的 JS 包管理工具，是为了弥补 npm 的一些缺陷而出现的")]),e._v(" "),a("p",[e._v("安装过的包会被保存进缓存目录，以后安装就直接从缓存中复制过来，这样做的本质还是会提高安装下载的速度，避免不必要的网络请求。")]),e._v(" "),a("h2",{attrs:{id:"扁平的node-modules目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扁平的node-modules目录"}},[e._v("#")]),e._v(" 扁平的node_modules目录")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("优点:")]),e._v(" "),a("p",[e._v("减少不必要的安装，假如A和B都需要依赖C那么扁平的安装就可以让A和B都能使用C，不需要在各自内部文件夹单独安装C")])]),e._v(" "),a("li",[a("p",[e._v("缺点:")]),e._v(" "),a("p",[e._v("由于扁平化导致源码可以访问本不属于当前项目所设定的依赖包;")])])]),e._v(" "),a("h2",{attrs:{id:"pnpm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pnpm"}},[e._v("#")]),e._v(" pnpm")]),e._v(" "),a("p",[e._v("pnpm 本质上就是一个包管理器，这一点跟 npm/yarn 没有区别，但它具有两个优势:")]),e._v(" "),a("ul",[a("li",[e._v("包安装速度极快；")]),e._v(" "),a("li",[e._v("磁盘空间利用非常高效。")])]),e._v(" "),a("p",[e._v("pnpm在安装依赖包时，不像npm和yarn那样将每个项目的依赖包存储到各自的node_modules中，而是将依赖包存储到系统的全局存储库中（通常在 ~/.pnpm-store 目录下）。当某个项目需要依赖包时，pnpm会在该项目的 node_modules 中创建一个符号链接（symlink）指向.pnpm全局存储库中的依赖包。")]),e._v(" "),a("p",[e._v("pnpm是"),a("strong",[e._v("非扁平化")]),e._v("的node_modules结构")]),e._v(" "),a("p",[a("img",{attrs:{src:n(464),alt:"image-20230401160125390"}})]),e._v(" "),a("h2",{attrs:{id:"package-lock-json文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-lock-json文件"}},[e._v("#")]),e._v(" package-lock.json文件")]),e._v(" "),a("img",{staticStyle:{zoom:"150%"},attrs:{src:n(465),alt:"image-20230321084803087"}}),e._v(" "),a("ul",[a("li",[e._v("-S是--save的简写表示开发和部署上线都会用到 dependencies属性")]),e._v(" "),a("li",[e._v("-D是--save-dev的简写表示开发用到但部署上线不会用到 devDependencies属性 如babel webpack")]),e._v(" "),a("li",[e._v("peerDependencies属性 表示对等依赖 依赖一个包必须以另一个宿主为前提 比如element-plus 依赖Vue3")]),e._v(" "),a("li",[e._v("版本依赖管理 ^x.y.z表示x保持不变yz安装最新版本     ~x.y.z表示xy保持不变z安装最新版本")])]),e._v(" "),a("h2",{attrs:{id:"npx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[e._v("#")]),e._v(" npx")]),e._v(" "),a("p",[e._v("npx是一个工具，npm v5.2.0引入的一条命令（npx），一个npm包执行器，旨在提高从npm注册表使用软件包的体验")]),e._v(" "),a("p",[a("strong",[e._v("调用项目安装的模块")])]),e._v(" "),a("p",[e._v("npx 的原理就是运行的时候，会到"),a("code",[e._v("node_modules/.bin")]),e._v("路径和环境变量"),a("code",[e._v("$PATH")]),e._v("里面，检查命令是否存在。")]),e._v(" "),a("p",[e._v("由于 npx 会检查环境变量"),a("code",[e._v("$PATH")]),e._v("，所以系统命令也可以调用。")]),e._v(" "),a("p",[e._v("一般来说，调用 Mocha ，只能在项目脚本和 package.json 的"),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/10/npm_scripts.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("scripts")]),a("OutboundLink")],1),e._v("字段里面， 如果想在命令行下调用，必须像下面这样。")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 项目的根目录下执行")]),e._v("\nnode-modules/.bin/mocha "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--version")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# npx 就是想解决这个问题，让项目内部安装的模块用起来更方便，只要像下面这样调用就行了。")]),e._v("\nnpx mocha "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--version")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[a("strong",[e._v("避免全局安装模块")])]),e._v(" "),a("p",[e._v("除了调用项目内部模块，npx 还能避免全局安装的模块。比如，"),a("code",[e._v("create-react-app")]),e._v("这个模块是全局安装，npx 可以运行它，而且不进行全局安装。")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("npx create-react-app my-react-app\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("上面代码运行时，npx 将"),a("code",[e._v("create-react-app")]),e._v("下载到一个临时目录，使用以后再删除。所以，以后再次执行上面的命令，会重新下载"),a("code",[e._v("create-react-app")]),e._v("。")]),e._v(" "),a("p",[e._v("利用 npx 可以下载模块这个特点，可以指定某个版本的 Node 运行脚本。它的窍门就是使用 npm 的 node 模块")]),e._v(" "),a("blockquote",[a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("npx node@0.12.8 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v("\nv0.12.8\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])])]),e._v(" "),a("p",[e._v("上面命令会使用 0.12.8 版本的 Node 执行脚本。原理是从 npm 下载这个版本的 node，使用后再删掉。")]),e._v(" "),a("h2",{attrs:{id:"在npm上发包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在npm上发包"}},[e._v("#")]),e._v(" 在npm上发包")]),e._v(" "),a("ol",[a("li",[e._v("npm login")]),e._v(" "),a("li",[e._v("npm publish")])]),e._v(" "),a("h2",{attrs:{id:"npm-install-过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-install-过程"}},[e._v("#")]),e._v(" npm install 过程")]),e._v(" "),a("p",[a("img",{attrs:{src:n(466),alt:"image-20230321085306628"}}),e._v("\n勘误: 压缩到node_modules改为解压到node_modules")]),e._v(" "),a("ol",[a("li",[e._v("解析package.json文件：根据项目中的package.json文件确定需要安装的依赖包及其版本。")]),e._v(" "),a("li",[e._v("下载依赖包：从NPM仓库下载需要安装的依赖包及其相关依赖包。")]),e._v(" "),a("li",[e._v("安装依赖包：将下载下来的依赖包解压缩，并将其复制到项目目录的node_modules文件夹下。")]),e._v(" "),a("li",[e._v("执行依赖包的安装脚本：如果依赖包中包含installer或preinstall脚本，那么在安装后会被执行。")]),e._v(" "),a("li",[e._v("生成依赖关系树：根据依赖包的依赖关系，生成依赖关系树。")]),e._v(" "),a("li",[e._v("保存依赖信息：将安装的依赖包及其版本号保存到package-lock.json或yarn.lock文件中，以便在下次安装时使用。")])]),e._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.freecodecamp.org/chinese/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/",target:"_blank",rel:"noopener noreferrer"}},[e._v("什么是 npm —— 写给初学者的编程教程 (freecodecamp.org)"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/254794d5e741",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm和yarn的区别，我们该如何选择? - 简书 (jianshu.com)"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/02/npx.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("npx 使用教程 - 阮一峰的网络日志 (ruanyifeng.com)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=t.exports}}]);